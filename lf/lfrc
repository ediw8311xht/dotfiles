
set shell bash
set shellopts '-eu'
##USE DOUBLE QUOTES FOR 'set ifs "something"'
#set period 1
set ifs         "\n"
set ratios      2:4:4
set info        size:time
set scrolloff   8
set autoquit
#set drawbox
set dircounts
set preview
set number
set ignorecase
set noicons
set relativenumber
set sortby natural
#set sixel true
set dirfirst true
set mouse true
set borderfmt "\033[1;37m"
set cursorparentfmt "\033[02;49m"
set cursoractivefmt "\033[7m"

set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id

cmd np &{{
	if   [[ "$lf_ratios" = "1:2:3" ]] ; then  lf -remote "send ${id} set nopreview     "
                                              lf -remote "send ${id} set ratios 1:3    "
	elif [[  "$lf_ratios" =  "1:3" ]] ; then  lf -remote "send ${id} set preview       "
                                              lf -remote "send ${id} set ratios 1:1    "
    else								      lf -remote "send ${id} set preview       "
										      lf -remote "send ${id} set ratios 1:2:3  "; fi
}}

cmd rep &{{
	i="$1"; while [[ $((i--)) -gt 0 ]] ; do lf -remote "send $id ${2}"; done
}}

cmd open_editor &{{
    lf -remote "send $id \$$EDITOR \$fx"
}}

cmd open &{{
    for i in ${fx[@]} ; do
        zz="$(xdg-mime query default "$(mimetype -Lb "${i}")")"
        if ! [[ "${zz}" = "${EDITOR}.desktop" ]] ; then
            for j in ${fx[@]}; do
                mimeopen "${j}" &>/dev/null & disown
            done
            return
        fi
    done
    lf -remote "send $id \$$EDITOR \$fx"
}}

cmd oneforone &{{
    lf -remote "send ${id} set nopreview"
    lf -remote "send ${id} set ratios 1"
}}

cmd trash ${{
    for i in ${fx[@]} ; do
        trash-put "${i}"
    done
}}

#cmd autocd ${{
#    echo "${PWD}" > "$(mktemp /tmp/tmplf.XXXXXXXX)"
#    lf -remote "send ${id} quit" 2>/dev/null
#}}

cmd toggle_info ${{
    if [[ -n "$lf_info" ]] ; then
        lf -remote "send ${id} set info"
    else
        lf -remote "send ${id} set info ${1}"
    fi
}}


# - CD -
# Uppercase
map  <gt>C  cd  ~/.config/
map  <gt>D  cd  ~/Desktop/
map  <gt>P  cd  ~/Pictures/                                         

# Lowercase
map  <gt>b  cd  ~/bin/
map  <gt>c  cd  ~/Desktop/Coding/
map  <gt>d  cd  ~/Downloads/
map  <gt>e  cd  ~/Desktop/Coding/ELIXIR/
map  <gt>f  cd  ~/Documents/
map  <gt>h  cd  ~/
map  <gt>i  cd  ~/Documents/INFORMATION/
map  <gt>l  cd  ~/MyLibrary/
map  <gt>p  cd  ~/Pictures/
map  <gt>v  cd  ~/Videos/

map <lt>t       set ratios 1:1:1:1
map <lt>p       set preview!
map <lt><lt>    set ratios 2:3:5
map <lt>0       set ratios 1:2:3
map <lt>1       set ratios 1:2:1
map <lt>2       set ratios 1:2
map <lt>3       set ratios 1:1
map <lt>4       set ratios 2:1
map <lt>5       :set nopreview; set ratios 1
map <lt>6       set ratios 1:6
map <lt>7       set ratios 1:7
map <lt>8       set ratios 1:8
map <lt>9       set ratios 1:9
map <esc>       clear
map <enter>     shell
map <c-f>       :filter
#map C 		:quit
#map C 		!
map ;		:mark-save
map ?       :maps
map	K		push 3k
map E       :open_editor
map H		set hidden!
map I       :toggle_info "size:atime"
map J		push 3j
map O 		$mimeopen --ask $fx #-----------ASK AND THEN OPEN IN NEW WINDOW-----------------#
map P		push :!echo<space>""<left>
map Q 		&lf -remote 'send quit'; lf -remote 'quit'
map RF	    push :rename<enter><c-a><c-k>
map RN		rename
map RR      :reload
map Sb      :set drawbox!
map Ss      :set number!; set relativenumber!
map TR		:trash
map U       :unselect; clear
map VG		invert-below
map Vg		:invert-below; invert
map bB      &$BROWSER $fx
map bQ      &qutebrowser $fx
map c 		&sed "s@${HOME}/@\$\{HOME\}/@"  <<< "${fx[*]}" | xclip -selection "clipboard" -i -r
map d  	  	set dironly!
map e       np
map m       push :!mkdir<space>
map o 		&mimeopen $fx       #-----------OPEN IN NEW WINDOW------------------------------#
map r 		set reverse!
map x       cut
## remove filter with <c-r>
#------------------------------------------------------------------#
#-----------CALL WITH THIS function to use autocd------------------#
#------------------------------------------------------------------#
#map q 		    :autocd
#
#   function cd_from_lf() {
#       lf
#       if a="$(ls -1 -tr /tmp/lf* | tail -1)"
#       then
#           cd "$(cat "${a}")" || return 1
#           trash-put "${a}"
#       fi
#   }
#



