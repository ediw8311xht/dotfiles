# vim:set syntax=lf
set shell bash
set shellopts '-eu'
set ifs         "\n"
set ratios      2:4:4
set info        size:time
set scrolloff   5
set sortby      natural
set promptfmt   "\033[34;1m%d\033[0m\033[1m%S%f\033[0m %F"
set borderfmt   "\033[0;34m"
set cursorparentfmt "\033[02;49m"
set cursoractivefmt "\033[7m"
##USE DOUBLE QUOTES FOR 'set ifs "something"'
#set period 1
set icons false
set dirfirst
set mouse
set incfilter
set autoquit
set drawbox
set dircounts
set preview
set number
set ignorecase
set roundbox
set relativenumber

set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id

cmd np &{{
	if   [[ "$lf_ratios" = "1:2:3" ]] ; then  lf -remote "send ${id} set nopreview     "
                                              lf -remote "send ${id} set ratios 1:3    "
	elif [[  "$lf_ratios" =  "1:3" ]] ; then  lf -remote "send ${id} set preview       "
                                              lf -remote "send ${id} set ratios 1:1    "
    else								      lf -remote "send ${id} set preview       "
										      lf -remote "send ${id} set ratios 1:2:3  "; fi
}}

cmd rep &{{
	i="$1"; while [[ $((i--)) -gt 0 ]] ; do lf -remote "send $id ${2}"; done
}}

cmd open_editor &{{
    lf -remote "send $id \$$EDITOR \$fx"
}}

cmd open &{{
    for i in ${fx[@]} ; do
        zz="$(xdg-mime query default "$(mimetype -Lb "${i}")")"
        if ! [[ "${zz}" = "${EDITOR}.desktop" ]] ; then
            for j in ${fx[@]}; do
                mimeopen "${j}" &>/dev/null & disown
            done
            return
        fi
    done
    lf -remote "send $id \$$EDITOR \$fx"
}}

cmd oneforone &{{
    lf -remote "send ${id} set nopreview"
    lf -remote "send ${id} set ratios 1"
}}

cmd trash ${{
    for i in ${fx[@]} ; do
        trash-put "${i}"
    done
}}

cmd toggle_info ${{
    if [[ -n "$lf_info" ]] ; then
        lf -remote "send ${id} set info"
    else
        lf -remote "send ${id} set info ${1}"
    fi
}}

# 
#------------- zoxide integration ----------#
cmd z %{{
    result="$(zoxide query --exclude "$PWD" "$@" | sed 's/\\/\\\\/g;s/"/\\"/g')"
    lf -remote "send $id cd \"$result\""
}}
cmd zi ${{
    result="$(zoxide query -i | sed 's/\\/\\\\/g;s/"/\\"/g')"
    lf -remote "send $id cd \"$result\""
}}
cmd on-cd &{{
    zoxide add "$PWD"
}}
#------------- CD --------------------------#
# Uppercase
map  <gt>C  cd  ~/.config/
map  <gt>D  cd  ~/Desktop/
map  <gt>P  cd  ~/Pictures/                                         
# Lowercase
map  <gt>b  cd  ~/bin/
map  <gt>c  cd  ~/Desktop/Coding/
map  <gt>d  cd  ~/Downloads/
map  <gt>e  cd  ~/Desktop/Coding/ELIXIR/
map  <gt>f  cd  ~/Documents/
map  <gt>h  cd  ~/
map  <gt>i  cd  ~/Documents/INFORMATION/
map  <gt>l  cd  ~/MyLibrary/
map  <gt>p  cd  ~/Pictures/
map  <gt>t  cd  ~/TEST/
map  <gt>v  cd  ~/Videos/

#------------- RATIOS ----------------------#
map <lt>t       set ratios 1:1:1:1
map <lt>p       set preview!
map <lt><lt>    set ratios 2:3:5
map <lt>0       set ratios 1:2:3
map <lt>1       set ratios 1:2:1
map <lt>2       set ratios 1:2
map <lt>3       set ratios 1:1
map <lt>4       set ratios 2:1
map <lt>5       :set nopreview; set ratios 1
map <lt>6       set ratios 1:6
map <lt>7       set ratios 1:7
map <lt>8       set ratios 1:8
map <lt>9       set ratios 1:9

#------------- ETC -------------------------#
map <c-f>   :filter
map <enter> shell
map <esc>   clear
map ;		:mark-save
map ?       :maps
map ,

map x       cut
map	K		push 3k
map H		set hidden!
map Q 		&lf -remote 'send quit'; lf -remote 'quit'
map st     :{{ set sortby time; set info time; set reverse; top; }}
map U       :unselect; clear




map ,C      push :!touch<space>
map ,E       :open_editor
map ,I       :toggle_info "size:atime"
map ,J		push 3j
map ,O 		$mimeopen --ask $fx
map ,P		push :!echo<space>""<left>
map ,RF	    push :rename<enter><c-u>
map ,RN		rename
map ,Sb      :set drawbox!
map ,Ss      :set number!; set relativenumber!
map ,bB     &$BROWSER $fx
map ,bQ     &qutebrowser $fx
map ,c 		&sed "s@${HOME}/@\$\{HOME\}/@"  <<< "${fx[*]}" | xclip -selection "clipboard" -i -r
map ,d  	set dironly!
map ,m      push :!mkdir<space>
map ,o 		&mimeopen $fx
map ,p      nopreview
map ,t		:trash #trash
map RR      :reload
map r       :{{ set reverse!; top; }}
## remove filter with <c-r>
## No longer needed, version r36 adds visual mode
# map VG		invert-below 
# map Vg		:invert-below; invert
#------------------------------------------------------------------#
#-----------CALL WITH THIS function to use autocd------------------#
#------------------------------------------------------------------#
#map q 		    :autocd
#
#   function cd_from_lf() {
#       lf
#       if a="$(ls -1 -tr /tmp/lf* | tail -1)"
#       then
#           cd "$(cat "${a}")" || return 1
#           trash-put "${a}"
#       fi
#   }
#


#--------------REMOVED----------------------#
#cmd autocd ${{
#    echo "${PWD}" > "$(mktemp /tmp/tmplf.XXXXXXXX)"
#    lf -remote "send ${id} quit" 2>/dev/null
#}}

#map C 		:quit
#map C 		!

